# Pre-commit hooks for code quality
# Install with: pip install pre-commit
# Setup with: pre-commit install
# Run manually: pre-commit run --all-files

repos:
  # Python formatting
  - repo: https://github.com/psf/black
    rev: 23.3.0
    hooks:
      - id: black
        language_version: python3.10
        args: [--line-length=120]

  # Import sorting
  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
        args: [--profile=black, --line-length=120]

  # Python linting
  - repo: https://github.com/pycqa/flake8
    rev: 6.0.0
    hooks:
      - id: flake8
        args: [
          --max-line-length=120,
          --ignore=E203 W503 E501,
          --exclude=archive venv __pycache__
        ]

  # Security checks
  - repo: https://github.com/pycqa/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: [-ll, --exclude=tests archive]

  # Remove unused imports
  - repo: https://github.com/myint/autoflake
    rev: v2.0.2
    hooks:
      - id: autoflake
        args: [
          --in-place,
          --remove-unused-variables,
          --remove-all-unused-imports
        ]

  # Type checking (optional, can be slow)
  # - repo: https://github.com/pre-commit/mirrors-mypy
  #   rev: v1.3.0
  #   hooks:
  #     - id: mypy
  #       args: [--ignore-missing-imports]

  # Check for trailing whitespace
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-json
      - id: check-added-large-files
        args: [--maxkb=1000]
      - id: check-merge-conflict
      - id: debug-statements
      - id: mixed-line-ending
        args: [--fix=lf]

  # JavaScript linting (if Node.js available)
  # - repo: https://github.com/pre-commit/mirrors-eslint
  #   rev: v8.40.0
  #   hooks:
  #     - id: eslint
  #       files: \.(js|jsx)$
  #       args: [--fix]
  #       additional_dependencies:
  #         - eslint@8.40.0